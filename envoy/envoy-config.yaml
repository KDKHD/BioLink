admin:
  access_log_path: /dev/null
  address:
    socket_address:
      address: 127.0.0.1
      port_value: 9000
node:
  cluster: mycluster
  id: test-id
static_resources:
  listeners:
    - name: envoy_router
      address:
        socket_address: { address: 0.0.0.0, port_value: 8754 }
      filter_chains:
      - filters:
        - name: envoy.http_connection_manager
          config:
            stat_prefix: envoy_router
            codec_type: AUTO
            route_config:
              name: envoy_route
              virtual_hosts:
              - name: envoy_router
                domains: ["*"]
                routes:
                - match: 
                    prefix: "/eds"
                  route: 
                    cluster: eds_cluster 
                    prefix_rewrite: "/"
                - match: 
                    prefix: "/user_security_service"
                  route: 
                    cluster: user_security_service_envoy 
                    prefix_rewrite: "/"
                - match: 
                    prefix: "/user_security_db"
                  route: 
                    cluster: user_security_db_envoy 
                    prefix_rewrite: "/"
                - match: 
                    prefix: "/basic_display_service"
                  route: 
                    cluster: basic_display_service_envoy 
                    prefix_rewrite: "/"
                - match: 
                    prefix: "/basic_display_db"
                  route: 
                    cluster: basic_display_db_envoy 
                    prefix_rewrite: "/"
            http_filters:
            - name: envoy.router
    - name: front_envoy_listener
      address:
        socket_address: 
          address: 0.0.0.0
          port_value: 443
      filter_chains:
          filters:
            - name: envoy.http_connection_manager
              config:
                stat_prefix: ingress_front_envoy
                codec_type: AUTO
                generate_request_id: true
                route_config:
                  name: local_route
                  virtual_hosts:
                    - name: user_security_service_envoy
                      domains: 
                        - "api.heezy.dev"
                      routes:
                        - match: 
                            prefix: "/user_security_service/"
                          route: 
                            cluster: user_security_service_envoy 
                            prefix_rewrite: "/"
                    - name: web_frontend_service_envoy
                      domains: 
                        - "*"
                      routes:
                        - match: 
                            prefix: "/"
                          route: 
                            cluster: web_frontend_service_envoy 
                http_filters:
                  - name: envoy.router
          tls_context:
            common_tls_context:
              tls_certificates:
                - certificate_chain:
                    filename: "/etc/tls-secret/tls.crt"
                  private_key:
                    filename: "/etc/tls-secret/tls.key"
    - name: user_security_service_envoy_listener
      address:
        socket_address: { address: 0.0.0.0, port_value: 8786 }
      filter_chains:
      - filters:
        - name: envoy.http_connection_manager
          config:
            stat_prefix: ingress_user_security_service_envoy
            codec_type: AUTO
            route_config:
              name: local_route
              virtual_hosts:
              - name: user_security_service
                domains: ["*"]
                routes:
                - match: 
                    prefix: "/"
                  route: 
                    cluster: user_security_service 
            http_filters:
            - name: envoy.router
    - name: user_security_db_envoy_listener
      address:
        socket_address: { address: 0.0.0.0, port_value: 8787 }
      filter_chains:
      - filters:
        - name: envoy.http_connection_manager
          config:
            stat_prefix: user_security_db_envoy_listener
            codec_type: AUTO
            route_config:
              name: local_route
              virtual_hosts:
              - name: user_security_db
                domains: ["*"]
                routes:
                - match: 
                    prefix: "/"
                  route: 
                    cluster: user_security_db 
            http_filters:
            - name: envoy.router
    - name: web_frontend_service_envoy_listener
      address:
        socket_address: { address: 0.0.0.0, port_value: 8790 }
      filter_chains:
      - filters:
        - name: envoy.http_connection_manager
          config:
            stat_prefix: ingress_web_frontend_service_envoy
            codec_type: AUTO
            route_config:
              name: local_route
              virtual_hosts:
              - name: web_frontend_service
                domains: ["*"]
                routes:
                - match: 
                    prefix: "/"
                  route: 
                    cluster: web_frontend_service
            http_filters:
            - name: envoy.router
  clusters:
  - name: "front_envoy"
    type: EDS
    connect_timeout: 0.25s
    eds_cluster_config:
      service_name: front_envoy
      eds_config:
        api_config_source:
          api_type: REST
          cluster_names: [eds_cluster]
          refresh_delay: 20s
  - name: "user_security_service_envoy"
    type: EDS
    connect_timeout: 0.25s
    eds_cluster_config:
      service_name: user_security_service_envoy
      eds_config:
        api_config_source:
          api_type: REST
          cluster_names: [eds_cluster]
          refresh_delay: 20s
  - name: "user_security_service"
    connect_timeout: "0.25s"
    type: "strict_dns"
    lb_policy: "ROUND_ROBIN"
    hosts:
      - socket_address:
          address: "localhost"
          port_value: 8080
  - name: "user_security_db_envoy"
    type: EDS
    connect_timeout: 0.25s
    eds_cluster_config:
      service_name: user_security_db_envoy
      eds_config:
        api_config_source:
          api_type: REST
          cluster_names: [eds_cluster]
          refresh_delay: 20s
  - name: "user_security_db"
    connect_timeout: "0.25s"
    type: "strict_dns"
    lb_policy: "ROUND_ROBIN"
    hosts:
      - socket_address:
          address: "localhost"
          port_value: 5432
  - name: "basic_display_service_envoy"
    type: EDS
    connect_timeout: 0.25s
    eds_cluster_config:
      service_name: basic_display_service_envoy
      eds_config:
        api_config_source:
          api_type: REST
          cluster_names: [eds_cluster]
          refresh_delay: 20s
  - name: "basic_display_service"
    connect_timeout: "0.25s"
    type: "strict_dns"
    lb_policy: "ROUND_ROBIN"
    hosts:
      - socket_address:
          address: "localhost"
          port_value: 8080
  - name: "basic_display_db_envoy"
    type: EDS
    connect_timeout: 0.25s
    eds_cluster_config:
      service_name: basic_display_db_envoy
      eds_config:
        api_config_source:
          api_type: REST
          cluster_names: [eds_cluster]
          refresh_delay: 20s
  - name: "basic_display_db"
    connect_timeout: "0.25s"
    type: "strict_dns"
    lb_policy: "ROUND_ROBIN"
    hosts:
      - socket_address:
          address: "localhost"
          port_value: 15432
  - name: "web_frontend_service_envoy"
    type: EDS
    connect_timeout: 0.25s
    eds_cluster_config:
      service_name: web_frontend_service_envoy
      eds_config:
        api_config_source:
          api_type: REST
          cluster_names: [eds_cluster]
          refresh_delay: 20s
  - name: "web_frontend_service"
    connect_timeout: "0.25s"
    type: "strict_dns"
    lb_policy: "ROUND_ROBIN"
    hosts:
      - socket_address:
          address: "localhost"
          port_value: 3000
  - name: "eds_cluster"
    type: "strict_dns"
    connect_timeout: 0.25s
    hosts: 
      - socket_address: 
          address: "host.minikube.internal"
          port_value: 8080
